//This class tests the HTTP Client and therefore the method in the login controller
//Please be aware since the DB is constantly changing the service and provider Id  might not work and
// therefore cause failing tests
// also jwt tokens are probaply expried since the are only valid for 24h for security reasons

### Login welches funktioniert
POST http://localhost:3000/login
Content-Type: application/json

{
  "email": "gillian.cathomas@gmx.ch",
  "pwhash": "7QJFe1xB2WTb0vKmCdY/4bt1KNvlXhq/W1LCSc1zV5c="
}
> {%
client.test("Login works", function() {
  client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

### Login welches nicht funktioniert weil nicht verified
POST http://localhost:3000/login
Content-Type: application/json

{
  "email": "sophie.pfister@swissonline.ch",
  "pwhash": "7QJFe1xB2WTb0vKmCdY/4bt1KNvlXhq/W1LCSc1zV5c="
}
> {%
client.test("Login works not because not verified", function() {
  client.assert(response.status === 406, "Response status is 406");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}
###### funktioniert nicht weil passwort falsch
POST http://localhost:3000/login
Content-Type: application/json

{
"email": "gillian.cathomas@gmx.ch",
"pwhash": "7QJFe1xB2WTb0vKmCdY/4bt1KNvlXhq/W1LCSc1zV5c=e"
}

> {%
client.test("Login does not work, wrong password ", function() {
  client.assert(response.status === 404, "Response status is 404");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###

POST http://localhost:3000/login/forgotPassword
Content-Type: application/json

{
  "email": "gillian.cathomas@gmx.ch"
}

> {%
client.test("Send Mail for Passwort reset ", function() {
  client.assert(response.status === 201, "Response status is 201");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
POST http://localhost:3000/login/forgotPassword
Content-Type: application/json

{
  "email": "gillian.cathommmmas@gmx.ch"
}

> {%
client.test("Send Password reset, invalid email ", function() {
  client.assert(response.status === 400, "Response status is 400");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###


POST http://localhost:3000/login/resetPassword
Content-Type: application/json

{
  "token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoibnVsbCIsInN1cm5hbWUiOiJudWxsIiwiZW1haWwiOiJnaWxsaWFuLmNhdGhvbWFzQGdteC5jaCIsImlhdCI6MTU3MzQwOTkwMCwiZXhwIjoxNTczNDk2MzAwLCJhdWQiOiJnaWxsaWFuLmNhdGhvbWFzQGdteC5jaCIsImlzcyI6IkV2ZW50ZG9vIiwic3ViIjoiZ2lsbGlhbi5jYXRob21hc0BnbXguY2gifQ.j4LTpuO6EBddWOOU_8uMu5-ZhSybI76n4ZNg-_nkDKMJrSmhFbYWev9LTzBXrNEKQhpSmRry2vqmRmBRSSO3gV4f4M_AsjJGNn_mJoRhfEO7hCu16MUhSs1O1YxumFKv26Kh2wW_gnll0YpXwfRSihhCS33eoF62cyJWGgzjeBE",
  "password":"7QJFe1xB2WTb0vKmCdY/4bt1KNvlXhq/W1LCSc1zV5c="
}

> {%
client.test("Forgot Password, verify expired", function() {
  client.assert(response.status === 401, "Response status is 401");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
POST http://localhost:3000/login/resetPassword
Content-Type: application/json

{
  "token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiR2lsbGlhbiIsInN1cm5hbWUiOiJDYXRoIiwiZW1haWwiOiJnaWxsaWFuLmNhdGhvbWFzQGdteC5jaCIsImlhdCI6MTU3NTgzOTY4NywiZXhwIjoxNTc1OTI2MDg3LCJhdWQiOiJnaWxsaWFuLmNhdGhvbWFzQGdteC5jaCIsImlzcyI6IkV2ZW50ZG9vIiwic3ViIjoiZ2lsbGlhbi5jYXRob21hc0BnbXguY2gifQ.Zeax_hV9AnHr9JHFAQYxnvyT6VRhQu8mQnmAwZq46quS8dZiAnGXV0-P8lQU8mlnDlawrQ-gtLfR2B1KXARLtFZWHBfa37bZlFeFNiZjhmnAD3TC0l4lsUVNvw_CQubq50tX6p3vQsOaJV8F1kTTGcuaXCjAZUOAxVyKIVsXUis",
  "password":"7QJFe1xB2WTb0vKmCdY/4bt1KNvlXhq/W1LCSc1zV5c="
}

> {%
client.test("Forgot Password, ok", function() {
  client.assert(response.status === 200, "Response status is 200");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
POST http://localhost:3000/login/resetPassword
Content-Type: application/json

{
  "token": "eeeyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiR2lsbGlhbiIsInN1cm5hbWUiOiJDYXRob21hcyIsImVtYWlsIjoiZ2lsbGlhbi5jYXRob21hc0BnbXguY2giLCJpYXQiOjE1NzI5Njg4NzIsImV4cCI6MTU3Mjk3NjA3MiwiYXVkIjoiZ2lsbGlhbi5jYXRob21hc0BnbXguY2giLCJpc3MiOiJFdmVudGRvbyIsInN1YiI6ImdpbGxpYW4uY2F0aG9tYXNAZ214LmNoIn0.p8xPDYVchsI5yx1cWWkWRP8lXa5oxvLvNGLmLyBrvJkJavZxIpRuuNRGFmLkGdWvqkzQ9Y5Kx2BxZJVS3KuYDIMnAtD4jSoFupK2TXtfdqiz5ZD6pZGN0u9ZxajDEp7vHwrAudmfU2k75YX0cAFPi-qNTOsf5ZKfG_DPl15Nsjk",
  "password":"7QJFe1xB2WTb0vKmCdY/4bt1KNvlXhq/W1LCSc1zV5c="
}

> {%
client.test("Forgot Password, not working invalid token", function() {
  client.assert(response.status === 406, "Response status is 406");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###


