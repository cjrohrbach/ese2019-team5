###Funktionierendes erstellen von Eventservices
POST http://localhost:3000/profile/update
Content-Type: application/json

{
  "id":4,
  "firstname": "My new firstname",
  "lastname": "Meier",
  "email": "kiai.lenard@iiron.us",
  "pwhash": -1425372064,
  "street": "Station",
  "housenumber": 22,
  "zip": 1245,
  "city": "San Francisco",
  "isFrim": false
}
> {%
client.test("updating profile no phone no firm", function() {
  client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
GET http://localhost:3000/profile/94
Content-Type: application/json


> {%
client.test("getting user information for profile", function() {
  client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
GET http://localhost:3000/profile/12
Content-Type: application/json

> {%
client.test("getting user information for profile, user does not exist", function() {
  client.assert(response.status === 400, "Response status is 400");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
DELETE http://localhost:3000/profile/4
Content-Type: application/json

> {%
client.test("user was deleted no exception", function() {
  client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
DELETE http://localhost:3000/profile/95
Content-Type: application/json

> {%
client.test("user was deleted user exception", function() {
  client.assert(response.status === 400, "Response status is 400");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
DELETE http://localhost:3000/profile/117
Content-Type: application/json

> {%
client.test("user was deleted no exception", function() {
  client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
PUT http://localhost:3000/profile/addFavorite?userId=4
Content-Type: application/json


> {%
client.test("added favorite event service", function() {
  client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
GET http://localhost:3000/profile/requestedServices/:customerId?customerId=5
Content-Type: application/json

> {%
client.test("added favorite event service", function() {
  client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
