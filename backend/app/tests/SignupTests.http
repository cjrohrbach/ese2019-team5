
//This class tests the HTTP Client and therefore the method in the event service controller
//Please be aware since the DB is constantly changing the service and provider Id  might not work and
// therefore cause failing tests
// also be aware that jwt tokens are propably expired since they only last 24 hours
//geht nur mit neuer addresse
###
POST http://localhost:3000/signup
Content-Type: application/json

{
  "firstname": "Example",
  "lastname": "Miller",
  "email": "will123459@gmail.com",
  "pwhash": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
  "zip": 3031,
  "street": "Herestreet",
  "housenumber": 11,
  "city": "Bern",
  "isVerified": false
}

> {%
client.test("Sign up normal ", function() {
  client.assert(response.status === 201, "Response status is 201");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###

POST http://localhost:3000/signup
Content-Type: application/json

{
  "firstname": "Example",
  "lastname": "Miller",
  "email": "will123459@gmail.com",
  "pwhash": -1425372064,
  "zip": 3031,
  "street": "Herestreet",
  "housenumber": 11,
  "city": "Bern",
  "isVerified": false
}

> {%
client.test("Sign up with same email address  ", function() {
  client.assert(response.status === 400, "Response status is 400");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
POST http://localhost:3000/signup/sendMailAgain
Content-Type: application/json

{
  "email": "will123459@gmail.com"
}

> {%
client.test("Send mail again normal  ", function() {
  client.assert(response.status === 200, "Response status is 200");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}


###
POST http://localhost:3000/signup/sendMailAgain
Content-Type: application/json

{
  "email": "will123459dd@gmail.com"
}

> {%
client.test("Send mail again error, no user found ", function() {
  client.assert(response.status === 404, "Response status is 404");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
GET http://localhost:3000/signup/confirmation/eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lsa2luZyIsInN1cm5hbWUiOiJCcmlhciIsImVtYWlsIjoid2lsa2luLmJyaWFyQGlpcm9uLnVzIiwiaWF0IjoxNTc1ODkwNjQ3LCJleHAiOjE1NzU5NzcwNDcsImF1ZCI6IndpbGtpbi5icmlhckBpaXJvbi51cyIsImlzcyI6IkV2ZW50ZG9vIiwic3ViIjoid2lsa2luLmJyaWFyQGlpcm9uLnVzIn0.RiRd8t8nK5l4PpJWkm_DBn_uhxEmpdqfcwrVp8wCF0oIUWPJ0TCUJrDw2c2lt_HCHhmBJgr5L1Xi8gCGxr1SoA
Content-Type: application/json

{
  "email": "wilkin.briar@iiron.us"
}


> {%
client.test("verify normal  ", function() {
  client.assert(response.status === 200, "Response status is 200");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
GET http://localhost:3000/signup/confirmation/:token
Content-Type: application/json

{
  "email": "gillian.cathomas@gmx.ch",
  "url": "localhost:4200/start/signup/confirmation/deyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQUMiLCJzdXJuYW1lIjoiQ0EiLCJlbWFpbCI6ImdpbGxpYW4uY2F0aG9tYXNAZ214LmNoIiwiaWF0IjoxNTczMzA1OTg0LCJleHAiOjE1NzMzOTIzODQsImF1ZCI6ImdpbGxpYW4uY2F0aG9tYXNAZ214LmNoIiwiaXNzIjoiRXZlbnRkb28iLCJzdWIiOiJnaWxsaWFuLmNhdGhvbWFzQGdteC5jaCJ9.TVorfgkxC2S736-qXaUSJWI1IqcSE2QVP9eG6EvLldl17SYtwMN7fzI642d_QxNXOPjb4c0aQ58BVRyqtIIgnQ"
}


> {%
client.test("verify token invalid  ", function() {
  client.assert(response.status === 406 , "Response status is 406");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

### //TODO test tomorrow
GET http://localhost:3000/signup/confirmation/:token
Content-Type: application/json

{
  "email": "wilkin.briar@iiron.us",
  "url": "localhost:4200/start/signup/confirmation/eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lsa2luZyIsInN1cm5hbWUiOiJCcmlhciIsImVtYWlsIjoid2lsa2luLmJyaWFyQGlpcm9uLnVzIiwiaWF0IjoxNTc1ODkwNjQ3LCJleHAiOjE1NzU5NzcwNDcsImF1ZCI6IndpbGtpbi5icmlhckBpaXJvbi51cyIsImlzcyI6IkV2ZW50ZG9vIiwic3ViIjoid2lsa2luLmJyaWFyQGlpcm9uLnVzIn0.RiRd8t8nK5l4PpJWkm_DBn_uhxEmpdqfcwrVp8wCF0oIUWPJ0TCUJrDw2c2lt_HCHhmBJgr5L1Xi8gCGxr1SoA"
}


> {%
client.test("verify token expired  ", function() {
  client.assert(response.status === 401 , "Response status is 401");
  client.assert(response.body.isEmpty !== -1, "Response is not empty")
});
%}

###
